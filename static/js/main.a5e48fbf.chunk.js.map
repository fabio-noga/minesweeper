{"version":3,"sources":["util/createBoard.js","components/Cell.js","components/Board.js","App.js","index.js"],"names":["randomNum","min","max","Math","floor","random","Cell","details","updateFlag","revealCell","onClick","x","y","onContextMenu","e","style","revealed","value","width","height","background","display","justifyContent","alignItems","border","cursor","Board","useState","grid","setGrid","useEffect","newBoard","row","col","bombs","board","mineLocation","subCol","push","neighbors","flagged","bombsCount","createBoard","freshBoard","preventDefault","newGrid","JSON","parse","stringify","console","log","map","singleRow","index1","singleBlock","index2","App","basename","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a5e48fbf.chunk.js","sourcesContent":["export default (row,col,bombs) => {\r\n    let board=[];\r\n    let mineLocation = [];\r\n\r\n    //Initialize board\r\n    for  (let x=0; x<row; x++){\r\n        let subCol=[];\r\n        for (let y=0;y<col;y++){\r\n            subCol.push({\r\n                value:0,\r\n                revealed: false,\r\n                neighbors: [],\r\n                x:x,\r\n                y:y,\r\n                flagged: false,\r\n            });\r\n        }\r\n        board.push(subCol);\r\n    }\r\n\r\n    let bombsCount=0;\r\n    while(bombsCount<bombs){\r\n        let x=randomNum(0,row-1);\r\n        let y=randomNum(0,col-1);\r\n\r\n        if(board[x][y].value === 0){\r\n            board[x][y].value=\"X\";\r\n            mineLocation.push([x,y]);\r\n            bombsCount++;\r\n        }\r\n    }\r\n\r\n    //Generate numbers\r\n    for (let x=0;x<row;x++){\r\n        for (let y=0;y<col;y++){\r\n            if(board[x][y].value===\"X\") continue;\r\n            if(x>0 && board[x-1][y].value===\"X\") board[x][y].value++;                           //TOP\r\n            if(x>0 && (y < col-1) && board[x-1][y+1].value===\"X\") board[x][y].value++;          //TOP_RIGHT\r\n            if((y < col-1) && board[x][y+1].value===\"X\") board[x][y].value++;                   //RIGHT\r\n            if((y < col-1) && (x < row-1) && board[x+1][y+1].value===\"X\") board[x][y].value++;  //RIGHT_BOTTOM\r\n            if((x < row-1) && board[x+1][y].value===\"X\") board[x][y].value++;                   //BOTTOM\r\n            if((x < row-1) && y>0 && board[x+1][y-1].value===\"X\") board[x][y].value++;          //BOTTOM_LEFT\r\n            if(y>0 && board[x][y-1].value===\"X\") board[x][y].value++;                           //LEFT\r\n            if(x>0 && y>0 && board[x-1][y-1].value===\"X\") board[x][y].value++;                  //LEFT_TOP\r\n        }\r\n    }\r\n\r\n    return {board, mineLocation};\r\n};\r\nfunction randomNum(min = 0, max) {return Math.floor(Math.random() * (max - min + 1) + min);}","import React, { useEffect, useState } from 'react';\r\n\r\n\r\nexport default function Cell({details, updateFlag, revealCell}){\r\n    return(\r\n        <div \r\n            onClick ={() => revealCell(details.x,details.y)} \r\n            onContextMenu={(e) => updateFlag(e,details.x,details.y)} \r\n            style={style}>\r\n                {details.revealed ? details.value : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst style = {\r\n    width:40, \r\n    height:40, \r\n    background:\"lightgrey\",\r\n    display:\"flex\",\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    border: '1px solid black',\r\n    cursor:'pointer',\r\n}","import React, { useEffect, useState } from 'react';\r\nimport createBoard from '../util/createBoard';\r\nimport Cell from './Cell';\r\n\r\nconst Board = () =>{\r\n    const [grid, setGrid] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        function freshBoard(){\r\n            const newBoard = createBoard(5,5,5);\r\n            setGrid(newBoard.board);\r\n        }\r\n        freshBoard();\r\n    },[]);\r\n\r\n    //Flag Cell\r\n    const updateFlag = (e,x,y) => {\r\n        e.preventDefault();\r\n        let newGrid = JSON.parse(JSON.stringify(grid));\r\n        newGrid[x][y].flagged=true;\r\n        setGrid(newGrid);\r\n        console.log(\"Right Click\");\r\n    };\r\n\r\n    //Reveal Cell\r\n    const revealCell = (x,y)=> {\r\n        let newGrid = JSON.parse(JSON.stringify(grid));\r\n        if(newGrid[x][y].value===\"X\"){\r\n            console.log(\"you lost\");\r\n            setGrid(newGrid);\r\n        }else{\r\n            newGrid[x][y].revealed=true;\r\n            setGrid(newGrid);\r\n        }\r\n    };\r\n\r\n    return grid.map((singleRow, index1)=>{\r\n        return (\r\n            <div style={{display:\"flex\"}} key={index1}>\r\n                {singleRow.map((singleBlock, index2) => {\r\n                    return (<Cell \r\n                                revealCell={revealCell} \r\n                                details={singleBlock} \r\n                                updateFlag={updateFlag} \r\n                                key={index2}>\r\n                            \r\n                            </Cell>);\r\n                })}\r\n            </div>\r\n        ); \r\n    });\r\n}\r\n\r\nexport default Board;","import './App.css';\nimport Board from './components/Board';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div className=\"App\">\n        <h1>Minesweeper</h1>\n        <Board/>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}