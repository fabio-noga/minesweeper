{"version":3,"sources":["util/createBoard.js","util/reveal.js","util/mineColors.js","components/Circle.js","components/Cell.js","components/Timer.js","components/Modal.js","components/TopBar.js","components/Board.js","App.js","index.js"],"names":["randomNum","min","max","Math","floor","random","mineColor","colors","length","Circle","style","display","justifyContent","alignItems","height","width","borderRadius","background","Cell","details","updateFlag","revealCell","cellstyle","revealed","value","bombChexPattern","x","y","chexPattern","color","numColorCode","onClick","onContextMenu","e","className","flagged","timeIntervalId","num","Modal","restartGame","useState","render","setRender","useEffect","setTimeout","opacity","position","id","Timer","gameOver","gameStarted","time","setTime","sTime","setSTime","newTime","incrementTime","clearInterval","role","aria-label","paddingRight","TopBar","flagsUsed","fontSize","padding","flexDirection","fontWeight","margin","paddingBottom","Board","bombs","grid","setGrid","nonMineCount","setNonMineCount","mineLocations","setMineLocations","setGameOver","setGameStarted","setFlagsUsed","freshBoard","newBoard","row","col","board","mineLocation","subCol","push","neighbors","bombsCount","createBoard","preventDefault","newGrid","JSON","parse","stringify","console","log","i","newRevealedBoard","arr","newNonMinesCount","flipped","single","pop","alert","left","transform","boxShadow","map","singleRow","index1","singleBlock","index2","App","basename","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e509be8a.chunk.js","sourcesContent":["export default (row,col,bombs) => {\r\n    let board=[];\r\n    let mineLocation = [];\r\n\r\n    //Initialize board\r\n    for  (let x=0; x<row; x++){\r\n        let subCol=[];\r\n        for (let y=0;y<col;y++){\r\n            subCol.push({\r\n                value:0,\r\n                revealed: false,\r\n                neighbors: [],\r\n                x:x,\r\n                y:y,\r\n                flagged: false,\r\n            });\r\n        }\r\n        board.push(subCol);\r\n    }\r\n\r\n    let bombsCount=0;\r\n    while(bombsCount<bombs){\r\n        let x=randomNum(0,row-1);\r\n        let y=randomNum(0,col-1);\r\n\r\n        if(board[x][y].value === 0){\r\n            board[x][y].value=\"X\";\r\n            mineLocation.push([x,y]);\r\n            bombsCount++;\r\n        }\r\n    }\r\n\r\n    //Generate numbers\r\n    for (let x=0;x<row;x++){\r\n        for (let y=0;y<col;y++){\r\n            if(board[x][y].value===\"X\") continue;\r\n            if(x>0 && board[x-1][y].value===\"X\") board[x][y].value++;                           //TOP\r\n            if(x>0 && (y < col-1) && board[x-1][y+1].value===\"X\") board[x][y].value++;          //TOP_RIGHT\r\n            if((y < col-1) && board[x][y+1].value===\"X\") board[x][y].value++;                   //RIGHT\r\n            if((y < col-1) && (x < row-1) && board[x+1][y+1].value===\"X\") board[x][y].value++;  //RIGHT_BOTTOM\r\n            if((x < row-1) && board[x+1][y].value===\"X\") board[x][y].value++;                   //BOTTOM\r\n            if((x < row-1) && y>0 && board[x+1][y-1].value===\"X\") board[x][y].value++;          //BOTTOM_LEFT\r\n            if(y>0 && board[x][y-1].value===\"X\") board[x][y].value++;                           //LEFT\r\n            if(x>0 && y>0 && board[x-1][y-1].value===\"X\") board[x][y].value++;                  //LEFT_TOP\r\n        }\r\n    }\r\n\r\n    return {board, mineLocation};\r\n};\r\nfunction randomNum(min = 0, max) {return Math.floor(Math.random() * (max - min + 1) + min);}","  \r\nexport const revealed = (arr, x, y, newNonMinesCount) => {\r\n    console.log(arr[x][y]);\r\n    if (arr[x][y].revealed) {\r\n      // console.log(arr[x][y])\r\n      return;\r\n    }\r\n  \r\n    // Stack of all the cells which we\r\n    // would like to reveal/flip\r\n    let flipped = [];\r\n    flipped.push(arr[x][y]);\r\n    while (flipped.length !== 0) {\r\n      let single = flipped.pop();\r\n  \r\n      if (!single.revealed) {\r\n        newNonMinesCount--;\r\n        single.revealed = true;\r\n      }\r\n  \r\n      if (single.value !== 0) {\r\n        break;\r\n      }\r\n  \r\n      //Top - Left\r\n      if (\r\n        single.x > 0 &&\r\n        single.y > 0 &&\r\n        arr[single.x - 1][single.y - 1].value === 0 &&\r\n        !arr[single.x - 1][single.y - 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x - 1][single.y - 1]);\r\n      }\r\n  \r\n      // Bottom - Right\r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y < arr[0].length - 1 &&\r\n        arr[single.x + 1][single.y + 1].value === 0 &&\r\n        !arr[single.x + 1][single.y + 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x + 1][single.y + 1]);\r\n      }\r\n  \r\n      // Bottom - Left\r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y > 0 &&\r\n        arr[single.x + 1][single.y - 1].value === 0 &&\r\n        !arr[single.x + 1][single.y - 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x + 1][single.y - 1]);\r\n      }\r\n  \r\n      // Top - Right\r\n      if (\r\n        single.x > 0 &&\r\n        single.y < arr[0].length - 1 &&\r\n        arr[single.x - 1][single.y + 1].value === 0 &&\r\n        !arr[single.x - 1][single.y + 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x - 1][single.y + 1]);\r\n      }\r\n  \r\n      // Single ones\r\n  \r\n      // Top\r\n      if (\r\n        single.x > 0 &&\r\n        arr[single.x - 1][single.y].value === 0 &&\r\n        !arr[single.x - 1][single.y].revealed\r\n      ) {\r\n        flipped.push(arr[single.x - 1][single.y]);\r\n      }\r\n  \r\n      // Bottom\r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        arr[single.x + 1][single.y].value === 0 &&\r\n        !arr[single.x + 1][single.y].revealed\r\n      ) {\r\n        flipped.push(arr[single.x + 1][single.y]);\r\n      }\r\n  \r\n      // Left\r\n      if (\r\n        single.y > 0 &&\r\n        arr[single.x][single.y - 1].value === 0 &&\r\n        !arr[single.x][single.y - 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x][single.y - 1]);\r\n      }\r\n  \r\n      // Right\r\n      if (\r\n        single.y < arr[0].length - 1 &&\r\n        arr[single.x][single.y + 1].value === 0 &&\r\n        !arr[single.x][single.y + 1].revealed\r\n      ) {\r\n        flipped.push(arr[single.x][single.y + 1]);\r\n      }\r\n  \r\n      // Start Revealing Items\r\n      if (\r\n        single.x > 0 &&\r\n        single.y > 0 &&\r\n        !arr[single.x - 1][single.y - 1].revealed\r\n      ) {\r\n        //Top Left Reveal\r\n  \r\n        arr[single.x - 1][single.y - 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.y > 0 && !arr[single.x][single.y - 1].revealed) {\r\n        // Left Reveal\r\n        arr[single.x][single.y - 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y > 0 &&\r\n        !arr[single.x + 1][single.y - 1].revealed\r\n      ) {\r\n        //Bottom Left Reveal\r\n        arr[single.x + 1][single.y - 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.x > 0 && !arr[single.x - 1][single.y].revealed) {\r\n        //Top Reveal\r\n        arr[single.x - 1][single.y].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.x < arr.length - 1 && !arr[single.x + 1][single.y].revealed) {\r\n        // Bottom Reveal\r\n        arr[single.x + 1][single.y].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (\r\n        single.x > 0 &&\r\n        single.y < arr[0].length - 1 &&\r\n        !arr[single.x - 1][single.y + 1].revealed\r\n      ) {\r\n        // Top Right Reveal\r\n        arr[single.x - 1][single.y + 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (single.y < arr[0].length - 1 && !arr[single.x][single.y + 1].revealed) {\r\n        //Right Reveal\r\n        arr[single.x][single.y + 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n  \r\n      if (\r\n        single.x < arr.length - 1 &&\r\n        single.y < arr[0].length - 1 &&\r\n        !arr[single.x + 1][single.y + 1].revealed\r\n      ) {\r\n        // Bottom Right Reveal\r\n        arr[single.x + 1][single.y + 1].revealed = true;\r\n        newNonMinesCount--;\r\n      }\r\n    }\r\n  \r\n    return { arr, newNonMinesCount };\r\n  };","export const mineColor = () => {\r\n    let colors = [\"orange\", \"darkgreen\", \"cyan\", \"violet\", \"yellow\"];\r\n    return colors[Math.floor(Math.random() * colors.length)];\r\n  };","import React from \"react\";\r\n\r\nexport default function Circle() {\r\n  return (\r\n    <div\r\n      style={{\r\n        display: \"flex\",\r\n        justifyContent: \"center\",\r\n        alignItems: \"center\",\r\n      }}\r\n    >\r\n      <div\r\n        style={{\r\n          height: 23,\r\n          width: 23,\r\n          borderRadius: 20,\r\n          background: \"rgba(0,0,0,0.4)\",\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { mineColor } from '../util/mineColors';\r\nimport Circle from './Circle';\r\n\r\n\r\nexport default function Cell({details, updateFlag, revealCell}){\r\n\r\n    const cellstyle = {\r\n        background: details.revealed\r\n          ? details.value === \"X\"\r\n            ? mineColor()\r\n            : bombChexPattern(details.x, details.y)\r\n          : chexPattern(details.x, details.y),\r\n        color: numColorCode(details.value),\r\n      };\r\n\r\n    return(\r\n        <div \r\n            onClick ={() => revealCell(details.x,details.y)} \r\n            onContextMenu={(e) => updateFlag(e,details.x,details.y)} \r\n            style={cellstyle}\r\n            className=\"cellStyle\">\r\n                {!details.revealed && details.flagged \r\n                    ? \"🚩\"\r\n                    : details.revealed && details.value !==0 \r\n                        ? (details.value==='X') \r\n                            ? <Circle/>\r\n                            : details.value\r\n                        : \"\"}\r\n        </div>\r\n    )\r\n}\r\n\r\n/*const style = {\r\n    width:40, \r\n    height:40, \r\n    background:\"lightgrey\",\r\n    display:\"flex\",\r\n    justifyContent:'center',\r\n    alignItems:'center',\r\n    border: '1px solid black',\r\n    cursor:'pointer',\r\n}*/\r\n\r\nconst bombChexPattern = (x, y) => {\r\n    if (x % 2 === 0 && y % 2 === 0) {\r\n      return \"#e5c29f\";\r\n    } else if (x % 2 === 0 && y % 2 !== 0) {\r\n      return \"#d7b899\";\r\n    } else if (x % 2 !== 0 && y % 2 === 0) {\r\n      return \"#d7b899\";\r\n    } else {\r\n      return \"#e5c29f\";\r\n    }\r\n  };\r\n  \r\n  const chexPattern = (x, y) => {\r\n    if (x % 2 === 0 && y % 2 === 0) {\r\n      return \"#aad751\";\r\n    } else if (x % 2 === 0 && y % 2 !== 0) {\r\n      return \"#a2d249\";\r\n    } else if (x % 2 !== 0 && y % 2 === 0) {\r\n      return \"#a2d249\";\r\n    } else {\r\n      return \"#aad751\";\r\n    }\r\n  };\r\n  \r\n  const numColorCode = (num) => {\r\n    if (num === 1) {\r\n      return \"#1976d2\";\r\n    } else if (num === 2) {\r\n      return \"#388d3c\";\r\n    } else if (num === 3) {\r\n      return \"#d33030\";\r\n    } else if (num === 4) {\r\n      return \"#7c21a2\";\r\n    } else if (num === 5) {\r\n      return \"#1976d2\";\r\n    } else if (num === 6) {\r\n      return \"#1976d2\";\r\n    } else {\r\n      return \"white\";\r\n    }\r\n  };\r\n\r\n","import React, { useState, useEffect } from \"react\";\r\nlet timeIntervalId;\r\nexport default function Timer({ gameOver, gameStarted }) {\r\n  let [time, setTime] = useState(0);\r\n  let [sTime, setSTime] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (time > 0 && gameOver) {\r\n      setSTime(time);\r\n      setTime(0);\r\n    }\r\n  }, [gameOver, time]);\r\n\r\n  useEffect(() => {\r\n    const incrementTime = () => {\r\n      let newTime=0;\r\n      if(gameStarted) newTime = time + 1;\r\n      setTime(newTime);\r\n    };\r\n    timeIntervalId = setTimeout(() => {\r\n      incrementTime();\r\n    }, 1000);\r\n    if (gameOver) {\r\n      //   let updatedTime = JSON.parse(JSON.stringify(time));\r\n\r\n      clearInterval(timeIntervalId);\r\n    }\r\n  }, [time, setTime, gameOver, gameStarted]);\r\n\r\n  return (\r\n      <span role=\"img\" aria-label=\"clock\" style={{ paddingRight: 10 }}>\r\n        AAAAAAAAAAAAAAAA⏰ {gameOver ? sTime : time}\r\n      </span>\r\n  );\r\n}","import React, { useState, useEffect } from \"react\";\r\n\r\nexport default function Modal({ restartGame }) {\r\n  const [render, setRender] = useState(false);\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setRender(true);\r\n    }, 1000);\r\n  }, []);\r\n  return (\r\n    <div\r\n      style={{\r\n        opacity: render ? 1 : 0,\r\n        height: \"100%\",\r\n        width: \"100%\",\r\n        position: \"absolute\",\r\n        background: \"rgba(0,0,0,0.3)\",\r\n      }}\r\n    >\r\n      <div id=\"gameOverImage\"></div>\r\n      <div className=\"tryAgain\" onClick={() => restartGame()}>\r\n        Play Again\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport Timer from \"./Timer\";\r\n\r\nexport default function TopBar({ gameOver, gameStarted , flagsUsed}) {\r\n  return (\r\n    <div\r\n      style={{\r\n        color: \"white\", \r\n        fontSize: 20,\r\n        background: \"#4a752c\",\r\n        padding: \"10px 0\",\r\n        display: \"flex\",\r\n        flexDirection: \"row\",\r\n        justifyContent: \"space-around\",\r\n        alignItems: \"center\",\r\n        fontWeight:\"bold\"\r\n      }}\r\n    >\r\n      <p style={{margin:\"0\"}}><span role=\"img\" aria-label=\"flag\" style={{ paddingBottom: 10, paddingRight:30 }}>\r\n        🚩 {flagsUsed}\r\n      </span>\r\n      \r\n      <Timer gameOver={gameOver} gameStarted={gameStarted} /></p>\r\n    </div>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport createBoard from '../util/createBoard';\r\nimport { revealed } from '../util/reveal';\r\nimport Cell from './Cell';\r\nimport Modal from './Modal';\r\nimport Timer from './Timer';\r\nimport TopBar from './TopBar';\r\n\r\n\r\n\r\nconst Board = () =>{\r\n    const [width, setWidth] = useState(10);\r\n    const [height, setHeight] = useState(10);\r\n    const [bombs, setBombs] = useState(15);\r\n\r\n    const [grid, setGrid] = useState([]);\r\n    const [nonMineCount, setNonMineCount] = useState(0);\r\n    const [mineLocations, setMineLocations] = useState([]);\r\n    const [gameOver, setGameOver] = useState(false);\r\n    const [gameStarted, setGameStarted] = useState(false);\r\n    const [flagsUsed, setFlagsUsed] = useState(bombs);\r\n\r\n    useEffect(()=>{\r\n        freshBoard(width, height, bombs);\r\n    },[]);\r\n    const freshBoard = (width, height, bombs) => {\r\n        const newBoard = createBoard(width, height, bombs);\r\n        setNonMineCount(width*height-bombs);\r\n        setMineLocations(newBoard.mineLocation);\r\n        setGrid(newBoard.board);\r\n    }\r\n    //Flag Cell\r\n    const updateFlag = (e,x,y) => {\r\n        e.preventDefault();\r\n        if(grid[x][y].revealed || gameOver)return;\r\n        let newGrid = JSON.parse(JSON.stringify(grid));\r\n        if(newGrid[x][y].flagged) {\r\n            newGrid[x][y].flagged=false;\r\n            setFlagsUsed(flagsUsed+1);\r\n        }else {\r\n            newGrid[x][y].flagged=true;\r\n            setFlagsUsed(flagsUsed-1);\r\n        }\r\n        setGrid(newGrid);\r\n        console.log(\"Flag\");\r\n    };\r\n\r\n    //Reveal Cell\r\n    const revealCell = (x,y)=> {\r\n        if(grid[x][y].revealed || gameOver || grid[x][y].flagged)return;\r\n        setGameStarted(true);\r\n        console.log(gameStarted);\r\n        let newGrid = JSON.parse(JSON.stringify(grid));\r\n        if(newGrid[x][y].value===\"X\"){\r\n            for(let i=0;i<mineLocations.length;i++){\r\n                newGrid[mineLocations[i][0]][mineLocations[i][1]].revealed=true\r\n            }\r\n            setGrid(newGrid);\r\n            //alert(\"you lost\");\r\n            setGameOver(true);\r\n        }else{\r\n            let newRevealedBoard=revealed(newGrid,x,y, nonMineCount);\r\n            newGrid[x][y].revealed=true;\r\n            setGrid(newRevealedBoard.arr);\r\n            setNonMineCount(newRevealedBoard.newNonMinesCount);\r\n            if(newRevealedBoard.newNonMinesCount===0){\r\n                alert(\"Congratulations, you won!\");\r\n                setGameOver(true);\r\n            }\r\n        }\r\n    };\r\n\r\n\r\n    const restartGame = () =>{\r\n        setGameStarted(false);\r\n        freshBoard(width, height, bombs);\r\n        setGameOver(false);\r\n        setFlagsUsed(bombs);\r\n      };\r\n\r\n    return <div style={{left:\"50%\",transform:\"translateX(-50%)\", position: \"relative\", width: width*40, boxShadow:\"0px 0px 12px #000\"}}>\r\n        {gameOver && <Modal restartGame={restartGame}/>}\r\n        <TopBar flagsUsed={flagsUsed} gameOver={gameOver} gameStarted={gameStarted} />\r\n        {grid.map((singleRow, index1)=>{\r\n        return (\r\n            <div style={{display:\"flex\", justifyContent:'center'}} key={index1}>\r\n                {singleRow.map((singleBlock, index2) => {\r\n                    return (<Cell \r\n                                revealCell={revealCell} \r\n                                details={singleBlock} \r\n                                updateFlag={updateFlag} \r\n                                key={index2}>\r\n                            \r\n                            </Cell>)\r\n                })}\r\n            </div>\r\n        ); \r\n    })}\r\n    </div>\r\n}\r\n\r\nexport default Board;","import './App.css';\nimport Board from './components/Board';\nimport { HashRouter, Route, Link } from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <HashRouter basename='/'>\n      <div className=\"App\">\n        <h1>Minesweeper</h1>\n        <Board/>\n      </div>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}